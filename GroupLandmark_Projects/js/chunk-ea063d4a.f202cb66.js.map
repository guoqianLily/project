{"version":3,"sources":["webpack:///./src/manage/menuManagement/menuManagement.vue?9f35","webpack:///src/manage/menuManagement/menuManagement.vue","webpack:///./src/manage/menuManagement/menuManagement.vue?21da","webpack:///./src/manage/menuManagement/menuManagement.vue","webpack:///./src/api/rwfk_index.js","webpack:///./src/services/rwfkPage.js","webpack:///./node_modules/_core-js@2.6.11@core-js/modules/es6.array.fill.js","webpack:///./node_modules/_core-js@2.6.11@core-js/modules/_array-fill.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticStyle","staticClass","ref","attrs","menuTreeName","treeData","currentNodekey","expandedkeys","_v","on","MuneheadCall","staticRenderFns","component","taskFk_API","department_API","departmentTree_API","departmentAddandUpdata_API","departmentDelete_API","menuQuery_API","menuAddandUpdata_API","menudelete_API","menuTree_API","Roledata_API","addAndupdataRole_API","deleteRole_API","getuserData_API","AddAndUpdaturoleData_API","AddAndUpdatuUserData_API","qxtreeDatachecked","getroleGJjsID","getAlldepartsinfo","getAllmenuinfo","sysDepartmant_yz","sysMenu_yz","taskFeedback_api","deleteTask","menuVerificationRepeat","verificationIncidenceRelationbm","verificationIncidenceRelationByTitlebm","getDepartment","id","Promise","resolve","reject","http","url","API_Tack","method","data","then","status","catch","error","console","log","getDepartmentTree","AddDepartment","newData","deleteDepartment","menuGetData","AddAndUpdatamenu","deleteMenu","getMenuTree","getRoleData","addRoleData","roledata","deleteRoleData","getUserData","addAndUpduteData","roleId","menuIds","addAndUpduteUserData","userIds","type","sysMenuYZ","menuCode","depatmentYZ","depatmentgqGLGX","$export","P","fill","toObject","toAbsoluteIndex","toLength","module","exports","value","O","length","aLen","arguments","index","undefined","end","endPos"],"mappings":"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","file":"js/chunk-ea063d4a.f202cb66.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}},[_c('div',{staticClass:\"manageTree\"},[_c('menuTree',{ref:\"tree\",attrs:{\"treeName\":_vm.menuTreeName,\"treeData\":_vm.treeData,\"currentNodekey\":_vm.currentNodekey,\"expandedkeys\":_vm.expandedkeys}})],1),_c('div',{staticClass:\"manage_bmTable\"},[_c('header',[_vm._v(\"菜单管理\")]),_c('div',{staticStyle:{\"border-left\":\"1px solid #EBEEF5\"}},[_c('router-view',{on:{\"MenuheadCallBack\":_vm.MuneheadCall}})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//部门\r\n<template lang=\"html\">\r\n  <div style=\"width:100%;height:100%;\">\r\n    <div class=\"manageTree\">\r\n      <menuTree :treeName=\"menuTreeName\" :treeData=\"treeData\" ref=\"tree\" :currentNodekey='currentNodekey'  :expandedkeys='expandedkeys'></menuTree>\r\n    </div>\r\n    <div class=\"manage_bmTable\">\r\n      <header>菜单管理</header>\r\n      <div style=\"border-left:1px solid #EBEEF5;\">\r\n        <router-view @MenuheadCallBack=\"MuneheadCall\"></router-view>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</template>\r\n<script>\r\n  import {\r\n        getMenuTree\r\n  } from '../../services/rwfkPage.js'\r\n  export default {\r\n    data() {\r\n      return {\r\n        btn: true,\r\n        item: {\r\n          date: \"2018-11-11\",\r\n          name: \"OnePiece\",\r\n          address: \"郑州市高新区推进城\"\r\n        },\r\n        editableTabsValue2: \"2\",\r\n        editableTabs2: [],\r\n        tabIndex: 0,\r\n        tableData: [],\r\n        totalList: [],\r\n        menuTreeName: '菜单组织树',\r\n        treeData: [],\r\n        currentNodekey: \"\", //默认选中的节点树\r\n        expandedkeys: [], //默认展开的节点树 \r\n      };\r\n    },\r\n    methods: {\r\n      addTab(targetName) {\r\n        this.btn = true;\r\n        this.editableTabs2.forEach((v, k) => {\r\n          if (v.title == targetName) {\r\n            this.btn = false;\r\n            this.editableTabsValue2 = v.name;\r\n          }\r\n        });\r\n        if (this.btn) {\r\n          let newTabName = ++this.tabIndex + \"\";\r\n          this.editableTabs2.push({\r\n            title: targetName,\r\n            name: newTabName,\r\n            content: targetName\r\n          });\r\n          this.editableTabsValue2 = newTabName;\r\n        }\r\n      },\r\n      removeTab(targetName) {\r\n        let tabs = this.editableTabs2;\r\n        let activeName = this.editableTabsValue2;\r\n\r\n        if (activeName === targetName) {\r\n          tabs.forEach((tab, index) => {\r\n            if (tab.name === targetName) {\r\n              let nextTab = tabs[index + 1] || tabs[index - 1];\r\n              if (nextTab) {\r\n                activeName = nextTab.name;\r\n                this.$router.push({\r\n                  name: \"elc\",\r\n                  params: {\r\n                    id: nextTab.title\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n        }\r\n\r\n        this.editableTabsValue2 = activeName;\r\n\r\n        this.editableTabs2 = tabs.filter(tab => tab.name !== targetName);\r\n      },\r\n      MuneheadCall(data){\r\n         this.treeData = data;\r\n          this.$store.dispatch('getmenuid', this.treeData[0].id);\r\n          if( this.treeData.length>0){\r\n                  this.currentNodekey =  this.treeData[0].id;\r\n                  this.expandedkeys.push( this.treeData[0].id);\r\n\r\n              }\r\n\r\n      }\r\n\r\n\r\n    },\r\n    created() {\r\n      getMenuTree().then((data) => {\r\n        this.treeData = data.data.result;\r\n          this.$store.dispatch('getmenuid', this.treeData[0].id);\r\n          if( this.treeData.length>0){\r\n                  this.currentNodekey =  this.treeData[0].id;\r\n                  this.expandedkeys.push( this.treeData[0].id);\r\n\r\n              }\r\n\r\n      });\r\n      this.tableData = Array(20).fill(this.item);\r\n    },\r\n    \r\n    beforeRouteEnter(to, from, next) {\r\n      var self = this;\r\n\r\n      next(vm => {\r\n        vm.item.name = to.params.id;\r\n        vm.addTab(to.params.id);\r\n      });\r\n    },\r\n    watch: {\r\n      $route(to, from) {\r\n        this.item.name = this.$route.params.id;\r\n        this.addTab(to.params.id);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\">","import mod from \"-!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.0@vue-loader/lib/index.js??vue-loader-options!./menuManagement.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.0@vue-loader/lib/index.js??vue-loader-options!./menuManagement.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./menuManagement.vue?vue&type=template&id=c95bd8c8&lang=html&\"\nimport script from \"./menuManagement.vue?vue&type=script&lang=js&\"\nexport * from \"./menuManagement.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.9.0@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","//const PRO_HOST = 'http://47.92.121.252:8080'\r\n/*\r\n通过接口获取任务反馈页面数据的接口\r\n参数\r\nid(新增不需要传递)\t主键\r\ntaskId\t任务编号\r\nfeedbackType\t反馈类型\r\nfeedbackTime\t反馈时间\r\ncompletedDesc\t完成情况\r\ngap\t差因\r\nnextPlan\t下一步计划\r\ncompletedStatus\t完成状态\r\ntotalStatus\t整体任务完成状态\r\nselfEvaluate\t自评\r\nfinalEvaluate\t公议\r\ndataStatus\t数据状态\r\n\r\n */\r\nconst taskFk_API = \"/chouChing/feedbackInfoController/saveData\";\r\n/*\r\n通过接口获取部门查询页面数据的接口\r\n参数\r\n\"id\":\"1\",\t主键ID\r\n\"departmant\":\"code1\",\t部门编码\r\n\"departmantName\":\"公司1\",\t部门名称\r\n\"parentId\":\"#\",\t父ID\r\n\"parentName\":\"#\",\t父名称\r\n\"departmantType\":\"1\",\t部门类型\r\n\"departmantOwner\":null,\t部门负责人\r\n\"enabled\":\"1\",\t是否有效\r\n\"createdBy\":null,\t创建者\r\n\"createdTime\":null,\t创建时间\r\n\"updateBy\":null,\t修改者\r\n\"updateTime\":null\t修改时间\r\n\r\n */\r\nconst department_API = \"/chouChing/sysDepartmantController/selectByPrimaryKey\"\r\n    /*\r\n    通过接口获取部门树形菜单数据的接口\r\n    参数\r\n    \"id\":\"1\",\r\n    \"departmant\":\"code1\",\r\n    \"departmantName\":\"公司1\",\r\n    \"parentId\":\"#\",\r\n    \"parentName\":\"#\",\r\n    \"departmantType\":\"1\",\r\n    \"departmantOwner\":null,\r\n    \"enabled\":\"1\",\r\n    \"createdBy\":null,\r\n    \"createdTime\":null,\r\n    \"updateBy\":null,\r\n    \"updateTime\":null\r\n    childrenList:[]\r\n     */\r\nconst departmentTree_API = \"/chouChing/sysDepartmantController/searchTreeAllData\"\r\n\r\n/*\r\n    部门管理新增，修改\r\n      参数\r\nid\t主键ID\r\ndepartmant\t部门编号\r\ndepartmantName\t部门名称\r\nparentId\t父级部门编号\r\nparentName\t父级部门名称\r\ndepartmantType\t部门类型\r\ndepartmantOwner\t部门负责人\r\nenabled\t是否有效\r\nsortNo\t排序字段\r\n\r\n\r\n     */\r\nconst departmentAddandUpdata_API = \"/chouChing/sysDepartmantController/saveData\"\r\n\r\n/*\r\n    部门管理删除\r\n      参数\r\nid\t主键ID\r\ndepartmant\t部门编号\r\ndepartmantName\t部门名称\r\nparentId\t父级部门编号\r\nparentName\t父级部门名称\r\ndepartmantType\t部门类型\r\ndepartmantOwner\t部门负责人\r\nenabled\t是否有效\r\nsortNo\t排序字段\r\n     */\r\nconst departmentDelete_API = \"/chouChing/sysDepartmantController/deleteById\"\r\n\r\n/*\r\n菜单管理查询\r\n   \"id\":\"1\",\t主键ID\r\n\"departmant\":\"code1\",\t部门编码\r\n\"departmantName\":\"公司1\",\t部门名称\r\n\"parentId\":\"#\",\t父ID\r\n\"parentName\":\"#\",\t父名称\r\n\"departmantType\":\"1\",\t部门类型\r\n\"departmantOwner\":null,\t部门负责人\r\n\"enabled\":\"1\",\t是否有效\r\n\"createdBy\":null,\t创建者\r\n\"createdTime\":null,\t创建时间\r\n\"updateBy\":null,\t修改者\r\n\"updateTime\":null\t修改时间\r\n\r\n     */\r\nconst menuQuery_API = \"/chouChing/sysMenuController/selectByPrimaryKey\"\r\n    /*\r\n        菜单管理新增，修改\r\n      id\t主键ID\r\nselectByPrimaryKey\t部门编号\r\ndepartmantName\t部门名称\r\nparentId\t父级部门编号\r\nparentName\t父级部门名称\r\ndepartmantType\t部门类型\r\ndepartmantOwner\t部门负责人\r\nenabled\t是否有效\r\nsortNo\t排序字段\r\nuserId\t登录人（用户ID）\r\n\r\n         */\r\nconst menuAddandUpdata_API = \"/chouChing/sysMenuController/saveData\"\r\n\r\n/*\r\n    菜单管理删除\r\n      参数\r\n菜单id\r\n     */\r\nconst menudelete_API = \"/chouChing/sysMenuController/deleteById\"\r\n\r\n/*\r\n  返回值\t{\t\r\n\t\"rowCount\":3,\t总条数\r\n\t\"result\":[\t结果\r\n\t{\t\r\n\t\"id\":\"1\",\t主键ID\r\n\t\"departmant\":\"code1\",\t部门编码\r\n\t\"departmantName\":\"公司1\",\t部门名称\r\n\t\"parentId\":\"#\",\t父ID\r\n\t\"parentName\":\"#\",\t父名称\r\n\t\"departmantType\":\"1\",\t部门类型\r\n\t\"departmantOwner\":null,\t部门负责人\r\n\t\"enabled\":\"1\",\t是否有效\r\n\t\"createdBy\":null,\t创建者\r\n\t\"createdTime\":null,\t创建时间\r\n\t\"updateBy\":null,\t修改者\r\n\t\"updateTime\":null\t修改时间\r\n\tchildrenList:[]\t子部门\r\n\t}]\t\r\n\t}\t\r\n\r\n\r\n         */\r\nconst menuTree_API = \"/chouChing/sysMenuController/searchTreeAllData\"\r\n    /**\r\n     * 角色菜单查询全部\r\n     * pageNo\t页码\r\n    pageSize\t条数\r\n    id\t主键\r\n    roleName\t角色名称\r\n    enabled\t是否有效\r\n     */\r\nconst Roledata_API = \"/chouChing/sysRoleController/searchAllData\"\r\n    /**\r\n     * 角色菜单的添加\r\npost\t\r\nroleId\t角色编码\r\nuserIds\t用户ID集合\r\n{\t\r\ncode:200\t\r\nsuccess:true\t\r\nmessage:\"\"\t\r\nresult:true\t\r\n}\t\r\n\r\n     */\r\nconst addAndupdataRole_API = \"/chouChing/sysRoleController/saveData\"\r\n    /**\r\n     * 角色删除\r\n     * id\r\n     */\r\nconst deleteRole_API = \"/chouChing/sysRoleController/deleteById\"\r\n\r\n\r\n//获取所有的用户信息\r\nconst getuserData_API = '/chouChing/sysUserController/searchAllData'\r\n\r\n\r\n\r\n/*\r\n角色-菜单权限新增、修改\r\n类型\tpost\t\r\n参数\troleId\t角色编码\r\n\tmenuIds\t权限ID集合\r\n返回值\t{\t\r\n\tcode:200\t\r\n\tsuccess:true\t\r\n\tmessage:\"\"\t\r\n\tresult:true\t\r\n\t}\t\r\n\r\n*/\r\nconst AddAndUpdaturoleData_API = '/chouChing/sysRoleController/insertRoleMenuList'\r\n    /*\r\n    角色-用户权限新增、修改\r\n    类型\tpost\t\r\n    参数\troleId\t角色编码\r\n    \tmenuIds\t权限ID集合\r\n    返回值\t{\t\r\n    \tcode:200\t\r\n    \tsuccess:true\t\r\n    \tmessage:\"\"\t\r\n    \tresult:true\t\r\n    \t}\t\r\n\r\n    */\r\nconst AddAndUpdatuUserData_API = '/chouChing/sysRoleController/insertRoleUserList'\r\n    /**\r\n     * 根据用户ID 获取用户拥有的菜单(树形结构)\t路径\tsysMenuController/searchDataByUserId\t\r\n    \t类型\tPOST\t\r\n    \t参数\tuserId\t主键\r\n    \t返回值\t{\t\r\n    \t\t\"result\":[\t结果\r\n    \t\t{\t\r\n    \t\tid\t主键ID\r\n    \t\tmenuCode\t菜单权限编码\r\n    \t\tmenuName\t菜单名称\r\n    \t\tparentId\t父级ID\r\n    \t\tenabled\t是否有效\r\n    \t\ttype\t类型\r\n    \t\ticon\t图标\r\n    \t\troute\t路由\r\n    \t\turl\turl\r\n    \t\tlocation\t位置：left 、top\r\n    \t\tsortNo\t排序号\r\n    \t\tcreatedBy\t创建者\r\n    \t\tcreatedTime\t创建时间\r\n    \t\tupdateBy\t修改者\r\n    \t\tupdateTime\t修改时间\r\n    \t\tchildrenList\t子菜单\r\n    \t\t}]\t\r\n    \t\t}\t\r\n\r\n     */\r\n\r\n\r\nconst qxtreeDatachecked = '/chouChing/sysMenuController/searchAllDataByRoleId'\r\n    /**\r\n     * 根据角色ID查询（全部）\t路径\tsysUserController/searchAllDataByRoleId\t\r\n    \t类型\tPOST\t\r\n    \t参数\troleId\t角色ID\r\n    \t返回值\t{\t\r\n    \t\t\"result\":[\t结果\r\n    \t\t{\t\r\n    \t\tid\t主键ID\r\n    \t\tuserCode\t用户编码\r\n    \t\tuserName\t用户名称\r\n    \t\tpassword\t用户密码\r\n    \t\tmobile\t电话\r\n    \t\tmail\t邮箱\r\n    \t\tenabled\t是否有效\r\n    \t\tcreatedBy\t创建人\r\n    \t\teatedTime\t创建时间\r\n    \t\tupdateBy\t修改人\r\n    \t\tdateTime\t修改时间\r\n    \t\tcreatedBy\t创建者\r\n    \t\tcreatedTime\t创建时间\r\n    \t\tupdateBy\t修改者\r\n    \t\tupdateTime\t修改时间\r\n    \t\t}]\t\r\n    \t\t}\t\r\n\r\n     */\r\nconst getroleGJjsID = '/chouChing/sysUserController/searchAllDataByRoleId'\r\n\r\n/**\r\n * 部门查询（全部）\t路径\tsysDepartmantController/searchAllData\t\r\n\t类型\tPOST\t\r\n\t参数\tid\t主键ID\r\n\t\tdepartmant\t部门编码\r\n\t\tdepartmantName\t部门名称\r\n\t\tparentId\t父ID\r\n\t\tdepartmantType\t部门类型\r\n\t\tdepartmantOwner\t部门负责人\r\n\t\tenabled\t是否有效\r\n\t返回值\t{\t\r\n\t\t\"rowCount\":3,\t总条数\r\n\t\t\"result\":[\t结果\r\n\t\t{\t\r\n\t\t\"id\":\"1\",\t主键ID\r\n\t\t\"departmant\":\"code1\",\t部门编码\r\n\t\t\"departmantName\":\"公司1\",\t部门名称\r\n\t\t\"parentId\":\"#\",\t父ID\r\n\t\t\"parentName\":\"#\",\t父名称\r\n\t\t\"departmantType\":\"1\",\t部门类型\r\n\t\t\"departmantOwner\":null,\t部门负责人\r\n\t\t\"enabled\":\"1\",\t是否有效\r\n\t\t\"createdBy\":null,\t创建者\r\n\t\t\"createdTime\":null,\t创建时间\r\n\t\t\"updateBy\":null,\t修改者\r\n\t\t\"updateTime\":null\t修改时间\r\n\t\t}]\t\r\n\t\t}\t\r\n\r\n */\r\nconst getAlldepartsinfo = '/chouChing/sysDepartmantController/searchAllData'\r\n\r\n/**\r\n * 菜单查询(查询全部)\t路径\tsysMenuController/searchAllData\t\r\n\t类型\tPOST\t\r\n\t参数\tid\t主键ID\r\n\t\tmenuCode\t菜单权限编码\r\n\t\tmenuName\t菜单名称\r\n\t\tparentId\t父级ID\r\n\t\tenabled\t是否有效\r\n\t\ttype\t类型\r\n\t返回值\tid\t主键ID\r\n\t\tmenuCode\t菜单权限编码\r\n\t\tmenuName\t菜单名称\r\n\t\tparentId\t父级ID\r\n\t\tenabled\t是否有效\r\n\t\ttype\t类型\r\n\t\ticon\t图标\r\n\t\troute\t路由\r\n\t\turl\turl\r\n\t\tlocation\t位置：left 、top\r\n\t\tsortNo\t排序号\r\n\t\tcreatedBy\t创建者\r\n\t\tcreatedTime\t创建时间\r\n\t\tupdateBy\t修改者\r\n\t\tupdateTime\t修改时间\r\n\t\t}]\t\r\n\t\t}\t\r\n\r\n */\r\nconst getAllmenuinfo = '/chouChing/sysMenuController/searchAllData'\r\n\r\n/*\r\n部门删除验证\r\n*/\r\nconst sysDepartmant_yz = '/chouChing/sysDepartmantController/verificationIncidenceRelationByChildren'\r\n    //菜单管理删除验证\r\nconst sysMenu_yz = '/chouChing/sysMenuController/verificationIncidenceRelationByChildren'\r\n\r\n//任务反馈查询接口\r\nconst taskFeedback_api = '/chouChing/feedbackInfoController/searchData'\r\n\r\n//任务反馈任务删除接口\r\nconst deleteTask = '/chouChing/feedbackInfoController/deleteById'\r\n    /*\r\n    *验证菜单编码是否存在重复\t路径\tsysMenuController/verificationRepeat\t\r\n    \t类型\tPOST\t\r\n    \t参数\tid\t菜单ID(当修改的时候才传递)\r\n    \t\tmenuCode\t菜单编码\r\n    \t返回值\ttrue/false\t存在重复项返回false，不存在返回true\r\n\r\n     */\r\nconst menuVerificationRepeat = '/chouChing/sysMenuController/verificationRepeat'\r\n\r\n/*\r\n验证关联关系(是否存在下级部门)\t路径\tsysDepartmantController/verificationIncidenceRelationByChildren\t\r\n\t类型\tPOST\t\r\n\t参数\tid\t部门ID\r\n\t返回值\t{\t\r\n\t\tcode:200\t\r\n\t\tsuccess:true\t\r\n\t\tmessage:\"验证通过，无下级部门！\"\t\r\n\t\tresult:true\t\r\n\t\t}\t\r\n*/\r\nconst verificationIncidenceRelationbm = '/chouChing/sysDepartmantController/verificationIncidenceRelationByChildren'\r\n    /**\r\n     * 验证关联关系(是否存在关联岗位)\t路径\tsysDepartmantController/verificationIncidenceRelationByTitle\t\r\n    \t类型\tPOST\t\r\n    \t参数\tid\t部门ID\r\n    \t返回值\t{\t\r\n    \t\tcode:200\t\r\n    \t\tsuccess:true\t\r\n    \t\tmessage:\"验证通过，无关联岗位！\"\t\r\n    \t\tresult:true\t\r\n    \t\t}\t\r\n\r\n     */\r\nconst verificationIncidenceRelationByTitlebm = '/chouChing/sysDepartmantController/verificationIncidenceRelationByTitle'\r\n\r\n\r\n\r\n\r\nexport default {\r\n    taskFk_API,\r\n    department_API,\r\n    departmentTree_API,\r\n    departmentAddandUpdata_API,\r\n    departmentDelete_API,\r\n    menuQuery_API,\r\n    menuAddandUpdata_API,\r\n    menudelete_API,\r\n    menuTree_API,\r\n    Roledata_API,\r\n    addAndupdataRole_API,\r\n    deleteRole_API,\r\n    getuserData_API,\r\n    AddAndUpdaturoleData_API,\r\n    AddAndUpdatuUserData_API,\r\n    qxtreeDatachecked,\r\n    getroleGJjsID,\r\n    getAlldepartsinfo,\r\n    getAllmenuinfo,\r\n    sysDepartmant_yz,\r\n    sysMenu_yz,\r\n    taskFeedback_api,\r\n    deleteTask,\r\n    menuVerificationRepeat,\r\n    verificationIncidenceRelationbm,\r\n    verificationIncidenceRelationByTitlebm\r\n\r\n}","import http from '../utils/http'\r\nimport API from '../api'\r\nimport API_Tack from '../api/rwfk_index.js'\r\nexport function getTaskupdata(getdata) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.taskFk_API,\r\n                method: 'POST',\r\n                data: getdata\r\n            })\r\n            .then(({ data, status }) => {\r\n                resolve(data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    })\r\n}\r\n//部门查询\r\nexport function getDepartment(id) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.department_API,\r\n                method: 'POST',\r\n                data: { id: id }\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n// //部门树形菜单\r\nexport function getDepartmentTree() {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.departmentTree_API,\r\n                method: 'POST',\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n//部门部门新增修改\r\nexport function AddDepartment(newData) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.departmentAddandUpdata_API,\r\n                method: 'POST',\r\n                data: newData\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n\r\n//删除部门\r\nexport function deleteDepartment(id) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.departmentDelete_API,\r\n                method: 'POST',\r\n                data: { id: id }\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n\r\n//菜单查询\r\nexport function menuGetData(id) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.menuQuery_API,\r\n                method: 'POST',\r\n                data: { id: id }\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n//菜单新增修改\r\nexport function AddAndUpdatamenu(newData) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.menuAddandUpdata_API,\r\n                method: 'POST',\r\n                data: newData\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n\r\n//菜单删除\r\nexport function deleteMenu(id) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.menudelete_API,\r\n                method: 'POST',\r\n                data: { id: id }\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n\r\n// //菜单树形菜单\r\nexport function getMenuTree() {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.menuTree_API,\r\n                method: 'POST',\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n\r\n// //角色分页查询\r\nexport function getRoleData() {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.Roledata_API,\r\n                method: 'POST',\r\n                // data: {\r\n                //     pageNo: pageNo,\r\n                //     pageSize: pageSize\r\n                // }\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n// //角色增加修改\r\nexport function addRoleData(roledata) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.addAndupdataRole_API,\r\n                method: 'POST',\r\n                data: roledata\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n\r\n// //角色删除\r\nexport function deleteRoleData(id) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.deleteRole_API,\r\n                method: 'POST',\r\n                data: { id: id }\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n\r\n\r\n// 获取用户信息\r\nexport function getUserData() {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.getuserData_API,\r\n                method: 'POST',\r\n\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n\r\n//菜单权限新增修改用户信息\r\n\r\nexport function addAndUpduteData(roleId, menuIds) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.AddAndUpdaturoleData_API,\r\n                method: 'POST',\r\n                data: {\r\n                    roleId: roleId,\r\n                    menuIds: menuIds\r\n                }\r\n\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n\r\n\r\n//用户新增修改用户信息\r\n\r\nexport function addAndUpduteUserData(roleId, userIds) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.AddAndUpdatuUserData_API,\r\n                method: 'POST',\r\n                data: {\r\n                    roleId: roleId,\r\n                    userIds: userIds\r\n                }\r\n\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n\r\n// 根据用户ID 获取用户拥有的菜单(树形结构)\t路径\tsysMenuController/searchDataByUserId\t\r\n\r\nexport function qxtreeDatachecked(roleId) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.qxtreeDatachecked,\r\n                method: 'POST',\r\n                data: {\r\n                    roleId: roleId,\r\n                }\r\n\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n\r\n// 根据角色ID查询（全部）\r\n\r\nexport function getroleGJjsID(roleId) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.getroleGJjsID,\r\n                method: 'POST',\r\n                data: {\r\n                    roleId: roleId,\r\n                }\r\n\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n\r\n//获取所有的部门\r\nexport function getAlldepartsinfo(roleId) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.getAlldepartsinfo,\r\n                method: 'POST',\r\n                data: {\r\n                    roleId: roleId,\r\n                }\r\n\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n//获取所有的菜单\r\n\r\nexport function getAllmenuinfo(roleId) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.getAllmenuinfo,\r\n                method: 'POST',\r\n                data: {\r\n                    roleId: roleId,\r\n                    type: 'menu'\r\n                }\r\n\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n//部门删除验证\r\n\r\nexport function sysDepartmantYZ(id) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.sysDepartmant_yz,\r\n                method: 'POST',\r\n                data: {\r\n                    id: id,\r\n                }\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n//菜单删除验证\r\nexport function sysMenuYZ(id) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.sysMenu_yz,\r\n                method: 'POST',\r\n                data: {\r\n                    id: id,\r\n                }\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n\r\n//任务反馈查询接口\r\nexport function getAlltaskFeedback(pageNo, pageSize, feedbackType) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.taskFeedback_api,\r\n                method: 'POST',\r\n                data: {\r\n                    pageNo: pageNo,\r\n                    pageSize: pageSize,\r\n                    feedbackType: feedbackType\r\n                }\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n//任务反馈删除\r\nexport function deleteTaskFeedback(id) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.deleteTask,\r\n                method: 'POST',\r\n                data: {\r\n                    id: id,\r\n\r\n                }\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n//菜单管理编码验证\r\nexport function menuVerificationRepeat(menuCode, id) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.menuVerificationRepeat,\r\n                method: 'POST',\r\n                data: {\r\n                    menuCode: menuCode,\r\n                    id: id\r\n                }\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n\r\n//部门删除验证\r\n\r\nexport function depatmentYZ(id) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.verificationIncidenceRelationbm,\r\n                method: 'POST',\r\n                data: {\r\n\r\n                    id: id\r\n                }\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}\r\n//验证关联关系(是否存在关联岗位)\r\n\r\nexport function depatmentgqGLGX(id) {\r\n    return new Promise((resolve, reject) => {\r\n        http({\r\n                url: API_Tack.verificationIncidenceRelationByTitlebm,\r\n                method: 'POST',\r\n                data: {\r\n\r\n                    id: id\r\n                }\r\n            })\r\n            .then((data, status) => {\r\n                resolve(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(data);\r\n            })\r\n    })\r\n}","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n"],"sourceRoot":""}